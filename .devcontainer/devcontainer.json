// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
  "name": "Server Dockerfile Container",

  // Use a Dockerfile instead of Docker Compose
  "build": {
    "context": "../server",
    "dockerfile": "../server/Dockerfile",
    "options": ["--no-cache"]
  },

  // The 'service' property is not needed when not using docker-compose.

  // The optional 'workspaceFolder' property is the path VS Code should open by default when
  // connected. This is typically a file mount in .devcontainer/docker-compose.yml
  "workspaceFolder": "/app",

  // Mounts the local server directory to the /app directory in the container to reflect changes
  "mounts": [
    "source=${localWorkspaceFolder}/server,target=/app,type=bind,consistency=cached",
    "source=./data/products.db,target=/app/data/products.db,type=bind"
  ],

  // Features to add to the dev container. More info: https://containers.dev/features.
  // "features": {},

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000],
  "customizations": {
    "vscode": {
      "extensions": ["esbenp.prettier-vscode"]
    }
  }

  // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
  // "shutdownAction": "none",

  // Uncomment the next line to run commands after the container is created.
  // "postCreateCommand": "echo Container is ready!",

  // Configure tool-specific properties.
  // "customizations": {},

  // Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "node"
}
